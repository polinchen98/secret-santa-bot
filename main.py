from telebot import TeleBot

from credits import bot_token
from secrets import tg_id

from base import randomizer, get_by_id, get_all_user_id, delete_user_from_db, add_user_to_db
from exceptions import UserAlreadyExistsError, UserNotExistsError


bot = TeleBot(bot_token)


@bot.message_handler(commands=["start"])
def start_message(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –±–æ—Ç –¥–ª—è –¢–∞–π–Ω–æ–≥–æ –°–∞–Ω—Ç—ã üéÖüèº. "
                                      "–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞–∂–º–∏ /register, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –∏–≥—Ä—É. "
                                      "–î–æ 10 –¥–µ–∫–∞–±—Ä—è —Ç—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ–¥—É–º–∞—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å—Å—è –∏–∑ –∏–≥—Ä—ã –Ω–∞–∂–∞–≤ /delete."
                                      "–ò–º—è —á–µ–ª–æ–≤–µ–∫–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—ã –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫, —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ 10 –¥–µ–∫–∞–±—Ä—è."
                                      "–í –∫–∞—á–µ—Å—Ç–≤–µ –ø–æ–¥–∞—Ä–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —á—Ç–æ —É–≥–æ–¥–Ω–æ, —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –¥–æ 5–∫ –¥—Ä–∞–º:)"
                                      "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —É–¥–∞–ª—è–π—Å—è –∏–∑ –∏–≥—Ä—ã, –ø–æ—Å–ª–µ 10 –¥–µ–∫–∞–±—Ä—è, –∏–Ω–∞—á–µ —Ç–≤–æ–π –ø–æ–¥–æ–ø–µ—á–Ω—ã–π –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –±–µ–∑ –ø–æ–¥–∞—Ä–∫–∞ üòû"
                                      "–ü–æ–¥–∞—Ä–∫–∞–º–∏ –º–µ–Ω—è–µ–º—Å—è 26 –¥–µ–∫–∞–±—Ä—è!",
                     )


@bot.message_handler(commands=["register"])
def register_to_db(message):
    inf = bot.get_chat_member(message.chat.id, message.from_user.id)
    full_name = f"{inf.user.first_name} {inf.user.last_name}"
    try:
        add_user_to_db(first_name=inf.user.first_name,
                       last_name=inf.user.last_name,
                       username=inf.user.username,
                       user_id=inf.user.id)
        bot.send_message(message.chat.id, f"{full_name}, –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –∏–≥—Ä—É!")
    except UserAlreadyExistsError:
        bot.send_message(message.chat.id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")


@bot.message_handler(commands=["delete"])
def delete_user_from_game(message):
    inf = bot.get_chat_member(message.chat.id, message.from_user.id)
    try:
        delete_user_from_db(inf.user.id)
        bot.send_message(message.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∏–≥—Ä—ã!")
    except UserNotExistsError:
        bot.send_message(message.chat.id, "–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")


@bot.message_handler(commands=["play"])
def start_game(message):
    inf = bot.get_chat_member(message.chat.id, message.from_user.id)
    if inf.user.id == tg_id:
        randomizer()
        list_id = get_all_user_id()
        for id_ in list_id:
            user = get_by_id(id_)
            partner = get_by_id(user.partner_id)
            link_telegram = f"https://t.me/{partner.username}"
            bot.send_message(user.user_id, f"–¢–≤–æ–π –ø–æ–¥–æ–ø–µ—á–Ω—ã–π {link_telegram}")
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")


bot.polling(none_stop=True)
